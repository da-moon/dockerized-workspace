---
version: '3'
tasks:
  checkov:
    desc: >
      Checkov - A tool for security and compliance
      misconfigurations analysis
      that uses graph-based scanning.
    summary: >
      Security and compliance misconfigurations
      analysis with Checkov using graph-based scanning.
    cmds:
      - cmd: checkov --config-file .checkov.yaml
    preconditions:
      - sh: '[ -r "{{.ROOT_DIR}}/.checkov.yaml" ] && exit 0 || exit 1'
        msg: '`{{.ROOT_DIR}}/.checkov.yaml` file was not found'
      - sh: checkov --version
        msg: '`checkov` binary was not found in PATH'
  # ──────────────────────────────────────────────────────────────────────────────
  driftctl:
    desc: Catch infrastructure drift
    summary: >
      driftctl is a free and open-source CLI
      that warns of infrastructure drift and fills
      in the missing piece in your DevSecOps toolbox.
    dir: $WORKING_DIR
    cmds:
      - driftctl scan
    preconditions:
      - sh: driftctl version
        msg: '`driftctl` binary was not found in PATH'
    ignore_error: true
  # ──────────────────────────────────────────────────────────────────────────────
  infracost:
    desc: infracost - Generate cost estimates from Terraform
    summary: infracost - Generate cost estimates from Terraform
    dir: $WORKING_DIR
    cmds:
      - cmd: |
          powershell -c '
            $files=(git ls-files --exclude-standard "*.tfvars");
            $files+=(git ls-files --exclude-standard --others "*.tfvars");
            $COMMAND=@();
            $COMMAND+=("infracost","breakdown","--path",".");
            foreach ($file in $files) {
              $COMMAND+=@("--terraform-var-file", "`"$file`"")
            };
            $COMMAND+=@(";");
            Invoke-Expression ($COMMAND -join " ")'
        platforms: [windows]
      - cmd: |
          COMMAND=("infracost" "breakdown" "--path" ".")
          while read item; do
            COMMAND+=("--terraform-var-file" "$item")
          done < <( \
            git ls-files --exclude-standard "*.tfvars" ; \
            git ls-files --exclude-standard --others "*.tfvars" \
            )
          "${COMMAND[@]}"
        platforms: [linux, darwin]
    preconditions:
      - sh: infracost --version
        msg: '`infracost` binary was not found in PATH'
      - sh: '[ "$INFRACOST_API_KEY" != "" ]'
        msg: '`INFRACOST_API_KEY` environment variable was not found'
