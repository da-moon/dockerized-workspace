---
image:
  fjolsvin/gp-archlinux-workspace:latest
  # file: .gp/Dockerfile
  # context: .
tasks:
  - name: update-packages
    openMode: tab-before
    command: |
      set -euo pipefail ;
      if [ -x "$(command -v topgrade)" ]; then
        topgrade \
        --disable "vscode" \
        --env "CGO_ENABLED=1" \
        --env "CGO_LDFLAGS='-g -O2'" \
        --yes --skip-notify --no-retry --cleanup ;
      else
        if paru --version > /dev/null 2>&1 ; then
          paru -Syyu --removemake --cleanafter --noconfirm ;
          [ -d "${HOME}/.cache/paru/clone/" ] ;
          /bin/rm -rf "${HOME}/.cache/paru/clone" ;
          mkdir -p "${HOME}/.cache/paru/clone/" ;
          exit 0 ;
        fi
        sudo pacman -Syyu --noconfirm ;
        if aura --version > /dev/null 2>&1 ; then
          sudo aura -Ayyuxac --noconfirm --skipinteg --skippgpcheck ;
        fi
      fi
      exit 0 ;
  - name: setup-pre-commit
    command: |
      set -euo pipefail ;
      ! pre-commit --version > /dev/null 2>&1 \
      && python3 -m pip install pre-commit --version > /dev/null 2>&1 \
      && {
        pre-commit install ;
        pre-commit install --install-hooks ;
        pre-commit install --hook-type commit-msg ;
        pre-commit install-hooks ;
        pre-commit autoupdate ;
        git add .pre-commit-config.yaml ;
      }
      exit 0 ;
  - name: setup-docker-buildx
    openMode: tab-before
    command: |
      set -euo pipefail ;
      echo "${DOCKER_PASSWORD}" \
      | docker login --username "${DOCKER_USERNAME}" --password-stdin
      # NOTE: Gitpod buildx cache persists workspace reboots which can cause
      # the workspace to run out of space
      docker buildx prune --builder default --all --force ;
      docker buildx create \
        --use \
        --name "$(basename -s ".git" "$(git remote get-url origin)")" \
        --driver docker-container ;
      exit 0 ;
  - name: setup-sourcehut-ssh-key
    openMode: tab-before
    command: |
      set -euo pipefail ;
      [ ! -d "${HOME}/.ssh" ] && mkdir "${HOME}/.ssh" ;
      if [ -n "${SOURCEHUT_PRIVATE_KEY+x}" ] \
        && [ -n "${SOURCEHUT_PRIVATE_KEY}" ]; then
      echo "${SOURCEHUT_PRIVATE_KEY}" \
        | base64 -d \
        | tee ~/.ssh/id_rsa_sourcehut > /dev/null
      fi
      chmod 700 "${HOME}/.ssh" ;
      [ -r "${HOME}/.ssh/authorized_keys" ] \
      && chmod 644 "${HOME}/.ssh/authorized_keys" ;
      [ -r "${HOME}/.ssh/known_hosts" ] \
      && chmod 644 "${HOME}/.ssh/known_hosts" ;
      [ -r "${HOME}/.ssh/config" ] \
      && chmod 644 "${HOME}/.ssh/config" ;
      find "${HOME}/.ssh" \
        -type f \
        -name 'id*' \
        -exec chmod 600 {} \;
      find "${HOME}/.ssh" \
        -type f \
        -name 'id*.pub' \
        -exec chmod 644 {} \;
      exit 0 ;
  - name: setup-makedeb-ssh-key
    openMode: tab-before
    command: |
      set -euo pipefail ;
      [ ! -d "${HOME}/.ssh" ] && mkdir "${HOME}/.ssh" ;
      if [ -n "${MAKEDEB_PRIVATE_KEY+x}" ] \
        && [ -n "${MAKEDEB_PRIVATE_KEY}" ]; then
      echo "${MAKEDEB_PRIVATE_KEY}" \
        | base64 -d \
        | tee ~/.ssh/id_rsa_makedeb > /dev/null
      fi
      chmod 700 "${HOME}/.ssh" ;
      [ -r "${HOME}/.ssh/authorized_keys" ] \
      && chmod 644 "${HOME}/.ssh/authorized_keys" ;
      [ -r "${HOME}/.ssh/known_hosts" ] \
      && chmod 644 "${HOME}/.ssh/known_hosts" ;
      [ -r "${HOME}/.ssh/config" ] \
      && chmod 644 "${HOME}/.ssh/config" ;
      find "${HOME}/.ssh" \
        -type f \
        -name 'id*' \
        -exec chmod 600 {} \;
      find "${HOME}/.ssh" \
        -type f \
        -name 'id*.pub' \
        -exec chmod 644 {} \;
      exit 0 ;
  - name: fix-ssh-directory-permissions
    openMode: tab-before
    command: |
      set -euo pipefail ;
      chmod 700 "${HOME}/.ssh" ;
      [ -r "${HOME}/.ssh/authorized_keys" ] \
        && chmod 644 "${HOME}/.ssh/authorized_keys" ;
      [ -r "${HOME}/.ssh/known_hosts" ] \
        && chmod 644 "${HOME}/.ssh/known_hosts" ;
      [ -r "${HOME}/.ssh/config" ] \
        && chmod 644 "${HOME}/.ssh/config" ;
      find "${HOME}/.ssh" \
        -type f \
        -name 'id*' \
        -exec chmod 600 {} \;
      find "${HOME}/.ssh" \
        -type f \
        -name 'id*.pub' \
        -exec chmod 644 {} \;
      exit 0 ;
ports:
  - name: syncthing
    port: 8384
    description: syncthing UI
    onOpen: ignore
    visibility: private
github:
  prebuilds:
    master: true
    branches: true
    pullRequests: true
    pullRequestsFromForks: true
    addCheck: false
    addComment: false
    addBadge: true
vscode:
  extensions:
    - https://github.com/pouyakary/comment/releases/download/v11.2.0/comment-v-11.0.2.vsix
